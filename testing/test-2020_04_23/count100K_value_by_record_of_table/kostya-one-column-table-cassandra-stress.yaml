keyspace: stresscql_kostya_column_one

keyspace_definition: |
  CREATE KEYSPACE IF NOT EXISTS stresscql_kostya_column_one WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1};

table: t_kostya_one
table_definition: |
  CREATE TABLE t_kostya_one (
        sensor_name ascii,
        value double,
        published_date timestamp,
        PRIMARY KEY(sensor_name)
  ) WITH
    memtable_flush_period_in_ms=5000
    AND caching = { 'keys' : 'NONE', 'rows_per_partition' : '15000' };

extra_definitions:
  - "CREATE CUSTOM INDEX t_kostya_one_index_published_date_idx ON t_kostya_one (published_date) USING 'org.apache.cassandra.index.sasi.SASIIndex';"

insert:
  partitions: fixed(1500)     # number of unique partitions to update in a single operation
  # if batchcount > 1, multiple batches will be used but all partitions will
  # occur in all batches (unless they finish early); only the row counts will vary
  batchtype: UNLOGGED               # type of batch to use
  select: fixed(1500)/1500       # uniform chance any single generated CQL row will be visited in a partition;
  # generated for each partition independently, each time we visit it

queries:
  simple1:
    # '2020-01-01 00:00+03' -- будет параметр из явы передаваться пока срез за 2020 год, потом на 2 недели
    cql: |
      select * from t_kostya_one where published_date > '2020-01-01 00:00+03'
      LIMIT 15000
      ALLOW FILTERING;
    fields: samerow             # samerow or multirow (select arguments from the same row, or randomly from all rows in the partition)