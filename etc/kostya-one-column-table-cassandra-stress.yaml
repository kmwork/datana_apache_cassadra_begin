keyspace: stresscql_kostya_column_one
keyspace_definition: |
  CREATE KEYSPACE stresscql_kostya_column_one WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1};

table: t_kostya_one
table_definition: |
  CREATE TABLE t_kostya_one (
        sensor_name text,
        value decimal,
        published_date timestamp,
        PRIMARY KEY(sensor_name)
  );

extra_definitions:
  - "CREATE CUSTOM INDEX t_kostya_one_index_published_date_idx ON t_kostya_one (published_date) USING 'org.apache.cassandra.index.sasi.SASIIndex';"

columnspec:
  - name: sensor_name
    size: gaussian(5..10)
    population: gaussian(1..10M)
  - name: value
    cluster: uniform(20..15000) # Staff members do between 20 and 15000 events
  - name: published_date
    cluster: uniform(20..15000) # Staff members do between 20 and 15000 events


insert:
  partitions: uniform(1..50)       # number of unique partitions to update in a single operation
  # if batchcount > 1, multiple batches will be used but all partitions will
  # occur in all batches (unless they finish early); only the row counts will vary
  batchtype: LOGGED               # type of batch to use
  select: uniform(1..10)/10       # uniform chance any single generated CQL row will be visited in a partition;
  # generated for each partition independently, each time we visit it


queries:
  simple1:
    cql: select * from t_kostya_one where published_date > ? LIMIT 100000
    fields: samerow             # samerow or multirow (select arguments from the same row, or randomly from all rows in the partition)